From b4b894d9b1a171dd9f61d3da10f0c65cb97a5d39 Mon Sep 17 00:00:00 2001
From: Fliiiix <hi@l33t.name>
Date: Thu, 26 Mar 2020 19:23:52 +0100
Subject: [PATCH] make it compile again

---
 LED_Blinken/source/Car_LEDS.c | 40 +++++++++++++++++------------------
 LED_Blinken/source/Car_LEDS.h |  8 +++----
 LED_Blinken/source/LEDS.c     |  3 ++-
 LED_Blinken/source/LEDS.h     |  4 +++-
 LED_Blinken/source/structs.h  | 20 ++++++++++--------
 5 files changed, 40 insertions(+), 35 deletions(-)

diff --git a/LED_Blinken/source/Car_LEDS.c b/LED_Blinken/source/Car_LEDS.c
index 8b0b297..184c6b3 100644
--- a/LED_Blinken/source/Car_LEDS.c
+++ b/LED_Blinken/source/Car_LEDS.c
@@ -14,79 +14,79 @@
 uint32_t right_color_mode = 0;
 uint32_t left_color_mode = 0;
 
-void TurnOnFrontLEDs(counter _counter){
+void TurnOnFrontLEDs(led_counter* _counter){
 	LEDTurnOn(CONST_LED_F_L_RED_LED, _counter);
-	LEDTurnOn(CONST_LED_F_R_RED_LED);
+	LEDTurnOn(CONST_LED_F_R_RED_LED, _counter);
 }
 
-void TurnOnRearLEDs(){
-	LEDTurnOn(CONST_LED_R_L_RED_LED);
-	LEDTurnOn(CONST_LED_R_R_RED_LED);
+void TurnOnRearLEDs(led_counter* _counter){
+	LEDTurnOn(CONST_LED_R_L_RED_LED, _counter);
+	LEDTurnOn(CONST_LED_R_R_RED_LED, _counter);
 }
 
-void GoToNextLEDColorLeft(){
+void GoToNextLEDColorLeft(led_counter* _counter){
 	left_color_mode += 1;
 	left_color_mode %= 5;
 	switch(left_color_mode){
 		case 0:
 			LEDTurnOff(CONST_LED_F_L_GREEN_LED);
 			LEDTurnOff(CONST_LED_F_L_BLUE_LED);
-			LEDTurnOn(CONST_LED_F_L_RED_LED);
+			LEDTurnOn(CONST_LED_F_L_RED_LED, _counter);
 			break;
 		case 1:
 			LEDTurnOff(CONST_LED_F_L_RED_LED);
-			LEDTurnOn(CONST_LED_F_L_GREEN_LED);
+			LEDTurnOn(CONST_LED_F_L_GREEN_LED, _counter);
 			break;
 		case 2:
 			LEDTurnOff(CONST_LED_F_L_GREEN_LED);
-			LEDTurnOn(CONST_LED_F_L_BLUE_LED);
+			LEDTurnOn(CONST_LED_F_L_BLUE_LED, _counter);
 			break;
 		case 3:
 			LEDTurnOff(CONST_LED_F_L_BLUE_LED);
-			LEDTurnOn(CONST_LED_F_L_RED_LED);
-			LEDTurnOn(CONST_LED_F_L_GREEN_LED);
+			LEDTurnOn(CONST_LED_F_L_RED_LED, _counter);
+			LEDTurnOn(CONST_LED_F_L_GREEN_LED, _counter);
 			break;
 		case 4:
 			LEDTurnOff(CONST_LED_F_L_GREEN_LED);
-			LEDTurnOn(CONST_LED_F_L_BLUE_LED);
+			LEDTurnOn(CONST_LED_F_L_BLUE_LED, _counter);
 			break;
 		default:
 			break;
 	}
 }
 
-void GoToNextLEDColorRight(){
+void GoToNextLEDColorRight(led_counter* _counter){
 	right_color_mode += 1;
 	right_color_mode %= 5;
 	switch(right_color_mode){
 		case 0:
 			LEDTurnOff(CONST_LED_F_R_GREEN_LED);
 			LEDTurnOff(CONST_LED_F_R_BLUE_LED);
-			LEDTurnOn(CONST_LED_F_R_RED_LED);
+			LEDTurnOn(CONST_LED_F_R_RED_LED, _counter);
 			break;
 		case 1:
 			LEDTurnOff(CONST_LED_F_R_RED_LED);
-			LEDTurnOn(CONST_LED_F_R_GREEN_LED);
+			LEDTurnOn(CONST_LED_F_R_GREEN_LED, _counter);
 			break;
 		case 2:
 			LEDTurnOff(CONST_LED_F_R_GREEN_LED);
-			LEDTurnOn(CONST_LED_F_R_BLUE_LED);
+			LEDTurnOn(CONST_LED_F_R_BLUE_LED, _counter);
 			break;
 		case 3:
 			LEDTurnOff(CONST_LED_F_R_BLUE_LED);
-			LEDTurnOn(CONST_LED_F_R_RED_LED);
-			LEDTurnOn(CONST_LED_F_R_GREEN_LED);
+			LEDTurnOn(CONST_LED_F_R_RED_LED, _counter);
+			LEDTurnOn(CONST_LED_F_R_GREEN_LED, _counter);
 			break;
 		case 4:
 			LEDTurnOff(CONST_LED_F_R_GREEN_LED);
-			LEDTurnOn(CONST_LED_F_R_BLUE_LED);
+			LEDTurnOn(CONST_LED_F_R_BLUE_LED, _counter);
 			break;
 		default:
 			break;
 	}
 }
 
-void TurnOffAllLEDs(counter ){
+void TurnOffAllLEDs(led_counter counter){
 	LEDTurnOff(CONST_LED_F_L_RED_LED);
 	LEDTurnOff(CONST_LED_F_R_RED_LED);
 	LEDTurnOff(CONST_LED_F_L_GREEN_LED);
diff --git a/LED_Blinken/source/Car_LEDS.h b/LED_Blinken/source/Car_LEDS.h
index d23ac9f..af69732 100644
--- a/LED_Blinken/source/Car_LEDS.h
+++ b/LED_Blinken/source/Car_LEDS.h
@@ -9,10 +9,10 @@
 #define CAR_LEDS_H_
 
 
-void TurnOnFrontLEDs();
-void TurnOnRearLEDs();
-void GoToNextLEDColorLeft();
-void GoToNextLEDColorRight();
+void TurnOnFrontLEDs(led_counter*);
+void TurnOnRearLEDs(led_counter*);
+void GoToNextLEDColorLeft(led_counter*);
+void GoToNextLEDColorRight(led_counter*);
 void TurnOffAllLEDs();
 
 #endif /* CAR_LEDS_H_ */
diff --git a/LED_Blinken/source/LEDS.c b/LED_Blinken/source/LEDS.c
index bf0c30f..13bc763 100644
--- a/LED_Blinken/source/LEDS.c
+++ b/LED_Blinken/source/LEDS.c
@@ -9,6 +9,7 @@
 #include "fsl_gpio.h"
 #include "GPIO_Toggler.h"
 #include "pin_mux.h"
+#include "structs.h"
 
 #define CONST_LED_F_L_RED_LED 0
 #define CONST_LED_F_L_GREEN_LED 1
@@ -19,7 +20,7 @@
 #define CONST_LED_R_L_RED_LED 6
 #define CONST_LED_R_R_RED_LED 7
 
-void LEDTurnOn(uint32_t led, counter _counter){
+void LEDTurnOn(uint32_t led, led_counter* _counter){
 	switch(led){
 	case CONST_LED_F_L_RED_LED:
 		GPIO_PinOn(BOARD_INITPINS_LED_RED_FL_GPIO, BOARD_INITPINS_LED_RED_FL_PIN);
diff --git a/LED_Blinken/source/LEDS.h b/LED_Blinken/source/LEDS.h
index fd4bd5f..da5ce97 100644
--- a/LED_Blinken/source/LEDS.h
+++ b/LED_Blinken/source/LEDS.h
@@ -8,6 +8,8 @@
 #ifndef LEDS_H_
 #define LEDS_H_
 
+#include "structs.h"
+
 
 #define CONST_LED_F_L_RED_LED 0
 #define CONST_LED_F_L_GREEN_LED 1
@@ -18,7 +20,7 @@
 #define CONST_LED_R_L_RED_LED 6
 #define CONST_LED_R_R_RED_LED 7
 
-void LEDTurnOn(uint32_t led);
+void LEDTurnOn(uint32_t led, led_counter* _counter);
 void LEDTurnOff(uint32_t led);
 void LEDToggle(uint32_t led);
 
diff --git a/LED_Blinken/source/structs.h b/LED_Blinken/source/structs.h
index d49c662..8c044d7 100644
--- a/LED_Blinken/source/structs.h
+++ b/LED_Blinken/source/structs.h
@@ -8,11 +8,13 @@
 #ifndef STRUCTS_H_
 #define STRUCTS_H_
 
+#include <stdint.h>
+
 typedef struct _adress {
 	char forename[120];
 	char lastname[120];
     char adresse[120];
-    int8_t zipcode;
+	int8_t zipcode;
     char adress[120];
 
 } adress;
@@ -35,14 +37,14 @@ typedef enum _boolean {
 } boolean;
 
 typedef struct _led_counter {
-	uint16_t FRR = 0;
-	uint16_t FRG = 0;
-	uint16_t FRB = 0;
-	uint16_t FLR = 0;
-	uint16_t FLG = 0;
-	uint16_t FLB = 0;
-	uint16_t RRR = 0;
-	uint16_t RLR = 0;
+	uint16_t FRR;
+	uint16_t FRG;
+	uint16_t FRB;
+	uint16_t FLR;
+	uint16_t FLG;
+	uint16_t FLB;
+	uint16_t RRR;
+	uint16_t RLR;
 } led_counter;
 
 #endif /* STRUCTS_H_ */
-- 
2.17.1

